name: CI/CD Pipeline

on:
  push:
    branches: [ main ]


jobs:

  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python all python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: x64

      - name: Install Python Virtual ENV
        run: pip3 install pipenv

      - name: Cache pipenv virtualenv
        uses: actions/cache@v3
        id: cache-venv
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }} 

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install


      # Build the app and run tests
      - name: Build and Run Test
        run: . venv/bin/activate && pytest

      - name: Create Zipfile archive of Dependencies
        run: |
          cd ./venv/lib/python3.10/site-packages
          zip -r9 ../../../../api.zip .

      - name: Add App to Zipfile
        run: cd ./app && zip -g ../api.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip


  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api

      - name: Upload to S3
        run: aws s3 cp api.zip s3://<YOUR_S3_BUCKET_NAME>/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name <YOUR_LAMBDA_FUNCTION_NAME> --s3-bucket <YOUR_S3_BUCKET_NAME> --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}